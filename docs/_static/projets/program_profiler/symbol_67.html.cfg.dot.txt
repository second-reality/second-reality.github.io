digraph {
	node [shape=box]
	812 -> 813
	812 [label="0x4000a13b70
_______________________
_______________________
pushq %rbp
movq %rsp, %rbp
pushq %r15
pushq %r14
pushq %r13
pushq %r12
pushq %rbx
subq $0x78, %rsp
movq 0x68(%rdi), %rax
testq %rax, %rax
je 0x4000a13f29"]
	813 -> 814
	813 -> 864
	813 [label="0x4000a13b8e
_______________________
_______________________
movq 8(%rax), %rax
movq 0x168(%rdi), %rbx
movq %rdi, %r12
movl %edx, -0x80(%rbp)
movl %esi, -0x7c(%rbp)
movq %rax, -0x78(%rbp)
movq 0x158(%rdi), %rax
movq %rbx, -0x98(%rbp)
testq %rax, %rax
movq %rax, -0xa0(%rbp)
je 0x4000a13f11"]
	814 -> 815
	814 [label="0x4000a13bc4
_______________________
_______________________
movq 8(%rax), %rax
addq (%rdi), %rax
cmpw $1, (%rax)
movq %rax, -0x88(%rbp)
jne 0x4000a13f31"]
	815 -> 816
	815 [label="0x4000a13bdc
_______________________
_______________________
xorl %ebx, %ebx
xorl %r13d, %r13d
nopl (%rax)
movq -0x88(%rbp), %rax
leaq 0x21244a(%rip), %rcx
movl 4(%rax), %r14d
movq 0x30(%r12), %rax
addq -0x78(%rbp), %r14
leaq (%rax, %rax, 8), %rax
shlq $4, %rax
movq (%rcx, %rax), %r15
testq %r15, %r15
jne 0x4000a13c2d"]
	816 -> 817
	816 [label="0x4000a13c2d
_______________________
_______________________
movq %r15, %rsi
movq %r14, %rdi
callq 0x4000a13670
_______________________
CALL 0x4000a13670"]
	817 -> 818
	817 -> 819
	817 [label="0x4000a13c38
_______________________
_______________________
testl %eax, %eax
je 0x4000a13c20
_______________________
LOOP 0x4000a13c2d"]
	818 -> 816
	818 [label="0x4000a13c20
_______________________
_______________________
movq 0x18(%r15), %r15
testq %r15, %r15
je 0x4000a13cf0
_______________________
LOOP 0x4000a13c2d"]
	819 -> 820
	819 [label="0x4000a13c3c
_______________________
_______________________
movl -0x80(%rbp), %esi
testl %esi, %esi
jne 0x4000a13d7f"]
	820 -> 851
	820 [label="0x4000a13c47
_______________________
_______________________
movq -0x88(%rbp), %rax
movl 8(%rax), %r14d
nopw (%rax, %rax)"]
	821 -> 846
	821 [label="0x4000a13c84
_______________________
_______________________
movq 0x211ff5(%rip), %rdi
leaq 0xc205(%rip), %r10
movq (%rdi), %rdi
testq %rdi, %rdi
cmoveq %r10, %rdi
_______________________
LOOP 0x4000a13c58"]
	832 -> 833
	832 -> 851
	832 [label="0x4000a13caa
_______________________
_______________________
orl %eax, %r13d
movzwl 6(%r14), %eax
popq %rdx
popq %rcx
andl $0x7fff, %eax
cmpl %eax, %ebx
cmovbl %eax, %ebx
movl 0xc(%r14), %eax
testl %eax, %eax
jne 0x4000a13c58
_______________________
LOOP 0x4000a13c58"]
	833 -> 834
	833 [label="0x4000a13cc6
_______________________
_______________________
movq -0x88(%rbp), %rcx
movl 0xc(%rcx), %eax
testl %eax, %eax
je 0x4000a13d9f"]
	834 -> 835
	834 -> 854
	834 [label="0x4000a13d9f
_______________________
_______________________
cmpq $0, -0x98(%rbp)
je 0x4000a13dd8"]
	835 -> 836
	835 [label="0x4000a13dd8
_______________________
_______________________
testl %ebx, %ebx
jne 0x4000a13dee"]
	836 -> 837
	836 [label="0x4000a13dee
_______________________
_______________________
leal 1(%rbx), %edi
movl $0x18, %esi
movq %rdi, %rbx
callq 0x4000a03a50
_______________________
CALL 0x4000a03a50"]
	837 -> 838
	837 [label="0x4000a13dfe
_______________________
_______________________
testq %rax, %rax
movq %rax, 0x2e0(%r12)
je 0x4000a14002"]
	838 -> 839
	838 -> 843
	838 [label="0x4000a13e0f
_______________________
_______________________
movq 0x1c8(%r12), %rdx
movq -0xa0(%rbp), %rcx
movl %ebx, 0x2e8(%r12)
movq 8(%rdx), %rdx
testq %rcx, %rcx
movq %rdx, 0x330(%r12)
je 0x4000a13eaa"]
	839 -> 840
	839 [label="0x4000a13e37
_______________________
_______________________
movq 8(%rcx), %rdi
addq (%r12), %rdi
movq -0x78(%rbp), %r8
nopl (%rax, %rax)
movl 8(%rdi), %ecx
addq %rdi, %rcx
jmp 0x4000a13e53"]
	840 -> 841
	840 [label="0x4000a13e53
_______________________
_______________________
movzwl 6(%rcx), %edx
movl %edx, %esi
andw $0x7fff, %si
movzwl %si, %r9d
cmpl %r9d, %ebx
jbe 0x4000a13e97"]
	841 -> 842
	841 -> 857
	841 [label="0x4000a13e67
_______________________
_______________________
movzwl %si, %esi
andw $0x8000, %dx
movl (%rcx), %r9d
leaq (%rsi, %rsi, 2), %rsi
movzwl %dx, %edx
leaq (%rax, %rsi, 8), %rsi
movl %edx, 0xc(%rsi)
movl 8(%rcx), %edx
movl %r9d, 8(%rsi)
addq %r8, %rdx
movq %rdx, (%rsi)
movl 4(%rdi), %edx
addq %r8, %rdx
movq %rdx, 0x10(%rsi)
movl 0xc(%rcx), %edx
testl %edx, %edx
jne 0x4000a13e50
_______________________
LOOP 0x4000a13e53"]
	842 -> 843
	842 [label="0x4000a13e9e
_______________________
_______________________
movl 0xc(%rdi), %edx
testl %edx, %edx
je 0x4000a13eaa"]
	843 -> 844
	843 -> 858
	843 [label="0x4000a13eaa
_______________________
_______________________
movq -0x98(%rbp), %rbx
testq %rbx, %rbx
je 0x4000a13ddc"]
	844 [label="0x4000a13ddc
_______________________
_______________________
leaq -0x28(%rbp), %rsp
movl %r13d, %eax
popq %rbx
popq %r12
popq %r13
popq %r14
popq %r15
popq %rbp
retq "]
	846 -> 832
	846 [label="0x4000a13c9c
_______________________
_______________________
subq $8, %rsp
movl -0x7c(%rbp), %r9d
pushq %rax
callq 0x4000a13760
_______________________
LOOP 0x4000a13c58
_______________________
CALL 0x4000a13760"]
	851 -> 821
	851 -> 846
	851 [label="0x4000a13c58
_______________________
_______________________
addq %rax, %r14
movq 8(%r12), %rdi
movq 0x28(%r15), %r8
movzwl 4(%r14), %eax
movl 8(%r14), %ecx
addq -0x78(%rbp), %rcx
movl (%r14), %edx
movq 0x30(%r12), %rsi
andl $2, %eax
cmpb $0, (%rdi)
movzwl %ax, %eax
jne 0x4000a13c9c"]
	854 -> 855
	854 [label="0x4000a13da9
_______________________
_______________________
movq -0x98(%rbp), %rax
movq 8(%rax), %rdx
addq (%r12), %rdx
jmp 0x4000a13dc3"]
	855 -> 835
	855 -> 856
	855 [label="0x4000a13dc3
_______________________
_______________________
movzwl 4(%rdx), %eax
andl $0x7fff, %eax
cmpl %eax, %ebx
cmovbl %eax, %ebx
movl 0x10(%rdx), %eax
testl %eax, %eax
jne 0x4000a13dc0"]
	856 -> 855
	856 [label="0x4000a13dc0
_______________________
_______________________
addq %rax, %rdx
_______________________
LOOP 0x4000a13dc3"]
	857 -> 840
	857 [label="0x4000a13e50
_______________________
_______________________
addq %rdx, %rcx
_______________________
LOOP 0x4000a13e53"]
	858 -> 859
	858 [label="0x4000a13eba
_______________________
_______________________
movq 8(%rbx), %rdx
movq -0x78(%rbp), %r8
addq (%r12), %rdx
jmp 0x4000a13ed3"]
	859 -> 860
	859 -> 862
	859 [label="0x4000a13ed3
_______________________
_______________________
testb $1, 2(%rdx)
jne 0x4000a13f05"]
	860 -> 861
	860 -> 863
	860 [label="0x4000a13f05
_______________________
_______________________
movl 0x10(%rdx), %ecx
testl %ecx, %ecx
jne 0x4000a13ed0
_______________________
LOOP 0x4000a13ed3"]
	861 -> 859
	861 [label="0x4000a13ed0
_______________________
_______________________
addq %rcx, %rdx
_______________________
LOOP 0x4000a13ed3"]
	862 -> 860
	862 [label="0x4000a13ed9
_______________________
_______________________
movl 0xc(%rdx), %esi
movzwl 4(%rdx), %ecx
movl 8(%rdx), %edi
movl (%rdx, %rsi), %esi
andl $0x7fff, %ecx
leaq (%rcx, %rcx, 2), %rcx
leaq (%rax, %rcx, 8), %rcx
addq %r8, %rsi
movl %edi, 8(%rcx)
movq %rsi, (%rcx)
movq $0, 0x10(%rcx)
_______________________
LOOP 0x4000a13ed3"]
	863 -> 844
	863 [label="0x4000a13f0c
_______________________
_______________________
jmp 0x4000a13ddc"]
	864 -> 854
	864 [label="0x4000a13f11
_______________________
_______________________
xorl %ebx, %ebx
xorl %r13d, %r13d
cmpq $0, -0x98(%rbp)
jne 0x4000a13da9"]
}
